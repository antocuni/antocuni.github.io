{"version": "https://jsonfeed.org/version/1", "title": "Antonio Cuni's blog", "home_page_url": "https://antocuni.eu/", "feed_url": "https://antocuni.eu/feed_json_updated.json", "description": "Antonio Cuni's blog", "icon": "https://antocuni.eu/assets/logo.svg", "authors": [], "language": "en", "items": [{"id": "https://antocuni.eu/2025/09/24/tracing-jits-in-the-real-world--cpython-core-dev-sprint/", "url": "https://antocuni.eu/2025/09/24/tracing-jits-in-the-real-world--cpython-core-dev-sprint/", "title": "Tracing JITs in the real world @ CPython Core Dev Sprint", "content_html": "<h1>Tracing JITs in the real world @ CPython Core Dev Sprint</h1>\n<p><meta property=\"og:title\" content=\"Tracing JITs in the real world @ CPython Core Dev Sprint\">\n<meta property=\"og:description\" content=\"My experience at the CPython Core Dev Sprint\">\n<meta property=\"og:image\" content=\"http://antocuni.eu/2025/09-tracing-jit-real-world-python/cpython-core-dev-sprint-2025-cambridge.jpg\">\n<meta name=\"author\" content=\"Antonio Cuni\"></p>\n<style>\n.slide {\n  border: 2px solid #ddd;\n  border-radius: 8px;\n  margin: 2em 0;\n  background: #f9f9f9;\n  max-width: 100%;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 2em;\n  background: white;\n  border-radius: 6px 6px 0 0;\n  border-bottom: 2px solid #eee;\n  display: block;\n\n  min-height: 400px;\n  height: auto;\n  overflow-y: auto;\n  overflow-x: hidden;\n}\n\n.slide h1, .slide h2, .slide h3 {\n  margin-top: 0;\n  color: #333;\n}\n</style>\n\n<p>Last week I got to take part in the CPython Core Developer Sprint in\nCambridge, hosted by ARM and brilliantly\n<a href=\"https://www.linkedin.com/posts/diegor_yesterday-we-wrapped-up-thecpython-core-activity-7375230888177057792-GezI\">organized by Diego Russo</a>\n-- about ~50 core devs and guests were there, and I was excited to join as one\nof the guests.</p>\n<p><img alt=\"CPython Core Dev Sprint 2025, ARM, Cambridge\" src=\"cpython-core-dev-sprint-2025-cambridge.jpg\"></p>\n<p>I had three main areas of focus:</p>\n<ul>\n<li>\n<p><strong>C API</strong>: this was a follow up of what we discussed at the\n    <a href=\"../07-europython-talks/index.md\">C API summit at EuroPython</a>. The current\n    C API is problematic, so we are exploring ideas for the development of\n    <a href=\"https://github.com/py-ni\">PyNI</a> (Python Native Interface), whose design\n    will likely be heavily inspired by <a href=\"https://hpyproject.org/\">HPy</a>. It's\n    important to underline that this is just the beginning and the entire\n    process will require multiple PEPs.</p>\n</li>\n<li>\n<p><strong>fancycompleter</strong> This is a\n    <a href=\"https://github.com/python/cpython/pull/130473\">small PR</a> which I started\n    <a href=\"../02-over-the-clouds/over-the-clouds.md\">months ago</a>, to enable colorful\n    tab completions within the Python REPL. I wrote the original version of\n    <a href=\"https://github.com/pdbpp/fancycompleter\">fancycompleter</a> 15 years ago,\n    but colorful completions work only in combination with PyREPL. Now PyREPL\n    is part of the standard library and enabled by default, so we can finally\n    upstream it. I hope to see it merged soon.</p>\n</li>\n<li>\n<p>\"<strong>JIT stuff</strong>\": I spent a considerable amount of time talking to the\n    people who are working on the CPython JIT (in particular Mark, Brandt,\n    Savannah, Ken Jin and Diego). Knowledge transfer worked in both ways: I\n    learned a lot about the internal details of CPython's JIT, and conversely I\n    shared with them some of the experience, pain points and gut feelings\n    which I got by working many years on PyPy.</p>\n</li>\n</ul>\n<p>In particular, on the first day I presented a talk titled <strong>Tracing JIT and real world Python</strong> (<a href=\"../../../talk/2025/09/core-dev-sprint-pypy-jit/index.html\">slides</a> and <a href=\"https://github.com/antocuni/antocuni.github.io/tree/main/blog/talk/2025/09/core-dev-sprint-pypy-jit\">source code</a>).</p>\n<p>What follows is an annotated version of the slides.</p>", "image": null, "date_modified": "2025-09-24T20:47:26+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2025/08/25/inside-cpythons-attribute-lookup/", "url": "https://antocuni.eu/2025/08/25/inside-cpythons-attribute-lookup/", "title": "Inside CPython's attribute lookup", "content_html": "<h1>Inside CPython's attribute lookup</h1>\n<p>Python's attribute lookup logic seems pretty simple at a first glance: \"first\nlook in the instance <code>__dict__</code>, then look in its type\".</p>\n<p>However, the actual logic is much more complex because it needs to take into\naccount the descriptor protocol, the difference between lookups on instances\nvs types, and what happens in presence of metaclasses.</p>\n<p>Recently I implemented preliminary support for the descriptor protocol in SPy,\nwhich led me to investigate the CPython source code to get a\nbetter grasp on the details. This is a write up on what I found, with links to\nthe actual C source code, to serve as a future reference.</p>\n<p>Thanks to Hood Chatham, Siu Kwan Lam and Justin Wood for the feedback on drafts.</p>", "image": null, "date_modified": "2025-08-25T14:43:48+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2025/07/21/slides-for-my-europython-2025-talks/", "url": "https://antocuni.eu/2025/07/21/slides-for-my-europython-2025-talks/", "title": "Slides for my EuroPython 2025 talks", "content_html": "<h1>EuroPython 2025 slides</h1>\n<p>Here are the slides for the three speeches which I gave at\n<a href=\"https://ep2025.europython.eu/\">EuroPython 2025</a>:</p>", "image": null, "date_modified": "2025-07-21T18:22:23+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2025/07/07/claude-code-modified-my-bashrc-without-asking/", "url": "https://antocuni.eu/2025/07/07/claude-code-modified-my-bashrc-without-asking/", "title": "Claude code modified my .bashrc without asking?", "content_html": "<h1>Claude code modified my .bashrc without asking?</h1>\n<p>!!! note \"Note\"\n    This is not the classical post about running <code>claude</code> in YOLO mode and\n    then complaining that it damaged the system. I have reasons to think that\n    <code>claude</code> automatically modified my <code>.bashrc</code> to remove a line\n    <code>alias claude=...</code> without asking my permission and without notifying me\n    of the change.</p>", "image": null, "date_modified": "2025-07-08T09:59:40+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2025/05/31/spy--pycon-it-2025/", "url": "https://antocuni.eu/2025/05/31/spy--pycon-it-2025/", "title": "SPy @ PyCon IT 2025", "content_html": "<h1>SPy @ PyCon IT 2025</h1>\n<p><meta property=\"og:title\" content=\"SPy @ PyCon IT 2025\">\n<meta property=\"og:description\" content=\"Slides of the talk\">\n<meta property=\"og:image\" content=\"http://antocuni.eu/2025/05-spy-pycon-italy/selfie.jpg\">\n<meta name=\"author\" content=\"Antonio Cuni\"></p>\n<p>Yesterday I talked about <a href=\"https://github.com/spylang/spy\">SPy</a> at <a href=\"https://pycon.it/\">PyCon Italy</a>.</p>\n<p><img alt=\"The most complicated selfie ever\" src=\"selfie.jpg\"></p>\n<p>Thanks to <a href=\"https://github.com/hugovk\">Hugo van Kemenade</a> for the picture.</p>\n<p>Slides are available <a href=\"/talk/2025/05/spy-pycon-italy/\">here</a>.</p>\n<p>The edited video is not available yet, but in the meantime it's possible to\nwatch unedited version available inside the\n<a href=\"https://www.youtube.com/live/pAnun46-fwE?si=gSMnf26TNHNSJkkO&amp;t=20642\">live stream</a>\nat minute 05:44:05.</p>", "image": null, "date_modified": "2025-05-31T19:39:02+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2025/03/16/tales-with-claude-code-how-to-make-it-behave/", "url": "https://antocuni.eu/2025/03/16/tales-with-claude-code-how-to-make-it-behave/", "title": "Tales with claude code: how to make it behave?", "content_html": "<h1>Tales with claude code: how to make it behave?</h1>\n<p>In the past weeks, I have been experimenting with using <code>claude code</code> to speed\nup development, in particular of <a href=\"https://github.com/spylang/spy\">SPy</a>.</p>\n<p>My experience so far reveals a clear pattern: <code>claude</code> excels at simple,\none-shot tasks that follow existing patterns, producing commit-ready\ncode. However, for complex tasks requiring multiple iterations, quality\ndeteriorates significantly with each round, often necessitating complete\nrewrites or extensive cleanup.</p>\n<p>Because of this, I have been looking for ways to guide it towards making it\nonly simple steps, and to wait for my confirmation before going further. So\nfar, I failed.</p>", "image": null, "date_modified": "2025-05-27T15:56:43+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2025/02/26/over-the-clouds-cpython-pyodide-and-spy/", "url": "https://antocuni.eu/2025/02/26/over-the-clouds-cpython-pyodide-and-spy/", "title": "Over the clouds: CPython, Pyodide and SPy", "content_html": "<h1>Over the clouds: CPython, Pyodide and SPy</h1>\n<p><meta property=\"og:title\" content=\"Over the Clouds: CPython, Pyodide, and SPy\">\n<meta property=\"og:description\" content=\"A week of hacking and winter sports in Cervinia\">\n<meta property=\"og:image\" content=\"http://antocuni.eu/2025/02-over-the-clouds/valtournenche-over-the-clouds.jpg\">\n<meta name=\"author\" content=\"Antonio Cuni\"></p>\n<p>The Python community is awesome.</p>\n<p>It is full of great people and minds, and interacting with people at\nconferences is always nice and stimulating. But one of my favorite things is\nthat over time, after many conferences, talks, pull requests and beers, the\npersonal relationship with some of them strengthen and they become friends.</p>\n<p><img alt=\"View from a ski slope in Valtournenche, Italy\" src=\"valtournenche-over-the-clouds.jpg\"></p>\n<p>I am fortunate enough that two of them, \u0141ukasz Langa and Hood Chatham, accepted my\ninvitation to join me in Cervinia, at the border between Italian and Swiss Alps,\nfor a week of hacking, winter sports and going literally over the clouds. This\nis a brief summary of what we did during our time together.</p>", "image": null, "date_modified": "2025-03-16T18:06:02+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2021/03/29/hello-hpy/", "url": "https://antocuni.eu/2021/03/29/hello-hpy/", "title": "Hello, HPy", "content_html": "<p>!!! note \"\"\n    Originally published on the <a href=\"https://hpyproject.org/blog/posts/2021/03/hello-hpy/\">HPy blog</a>.</p>\n<p>HPy has been around for a while now. The initial discussion started during\nEuroPython 2019, in the good old times when we could still go to conferences\nand have real-life meetings. Since then, HPy progressed <strong>a lot</strong> from the\npoint of view of the actual code, but we have been a bit too silent\nw.r.t. communicating what we are doing to the external world and to the broader\nPython community. Hopefully, now that this blog is online we will do a better\njob at periodically communicating the status of HPy, so make sure to\nsubscribe to the RSS feed.</p>", "image": null, "date_modified": "2025-02-11T13:49:52+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2021/07/15/hpy-002-first-public-release/", "url": "https://antocuni.eu/2021/07/15/hpy-002-first-public-release/", "title": "hpy 0.0.2: First public release", "content_html": "<p>!!! note \"\"\n    Originally published on the <a href=\"https://hpyproject.org/blog/posts/2021/07/hpy-0.0.2-first-public-release/\">HPy blog</a>.</p>\n<p>HPy 0.0.2 is out! This is the first version which is officially released and\nmade available on PyPI.</p>\n<p>The major highlight of this release is that it is supported by three different\nPython implementations: CPython, PyPy and GraalPython.</p>", "image": null, "date_modified": "2025-02-11T13:49:52+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2021/05/12/hpy--python-language-summit/", "url": "https://antocuni.eu/2021/05/12/hpy--python-language-summit/", "title": "HPy @ Python Language Summit", "content_html": "<p>!!! note \"\"\n    Originally published on the <a href=\"https://hpyproject.org/blog/posts/2021/05/hpy-python-language-summit/\">HPy blog</a>.</p>\n<p>Yesterday I had the privilege to give a talk about HPy\n(<a href=\"https://hpyproject.org/talks/2021/05/hpy-present-and-future.pdf\">sildes</a>) at the\n<a href=\"https://us.pycon.org/2021/summits/language/\">Python Language Summit 2021</a>.</p>\n<p>The organizers of the summit will soon publish a full report about the event\n(edit: now available\n<a href=\"https://pyfound.blogspot.com/2021/05/the-2021-python-language-summit.html\">here</a>),\nbut <a href=\"https://pyfound.blogspot.com/2021/05/the-2021-python-language-summit-hpy.html\">for the HPy-specific\npart</a>,\nwe got generally good feedback. Someone has a few concerns that if CPython is\nto change the API, HPy might not be going far enough. Others said that Python\nshouldn't wait for the \"perfect\" API if HPy can be the \"good\" one that helps it\nevolve.</p>\n<p>Everyone was open to have HPy-compatible wheels on PyPI, once the HPy\nUniversal ABI stays relatively stable. Many people suggested that we should\nreally write a PEP to propose HPy as a \"semi-official\" API for Python.</p>", "image": null, "date_modified": "2025-02-11T13:49:52+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2008/01/19/improve-net-integration/", "url": "https://antocuni.eu/2008/01/19/improve-net-integration/", "title": "Improve .NET Integration", "content_html": "<p>!!! note \"\"\n    Originally published on the <a href=\"https://pypy.org/posts/2008/01/improve-net-integration-2239651503641931440.html\">PyPy blog</a>.</p>\n<html><body><p>A while ago Amit Regmi, a student from Canada, started working on the\n<a class=\"reference\" href=\"https://codespeak.net/viewvc/pypy/branch/clr-module-improvements/?pathrev=50773\">clr module improvements</a> branch as a university project.\n</p>", "image": null, "date_modified": "2000-01-01T00:00:00+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2008/01/19/pypynet-goes-windows-forms/", "url": "https://antocuni.eu/2008/01/19/pypynet-goes-windows-forms/", "title": "PyPy.NET goes Windows Forms", "content_html": "<p>!!! note \"\"\n    Originally published on the <a href=\"https://pypy.org/posts/2008/01/pypynet-goes-windows-forms-7031406830502864570.html\">PyPy blog</a>.</p>\n<html><body><a href=\"https://4.bp.blogspot.com/_4gR6Ggu8oHQ/R5J41OiHR7I/AAAAAAAAACo/u8jr08QiCmo/s1600-h/winform.png\"><img alt=\"\" border=\"0\" id=\"BLOGGER_PHOTO_ID_5157317379122218930\" src=\"https://4.bp.blogspot.com/_4gR6Ggu8oHQ/R5J41OiHR7I/AAAAAAAAACo/u8jr08QiCmo/s320/winform.png\" style=\"float: right; margin: 0 0 10px 10px; cursor: pointer; cursor: hand;\"></a>\n<p>After having spent the last few days on understanding PyPy's JIT,\ntoday I went back hacking the <cite>clr module</cite>.  As a result, it is now\npossible to import and use external assemblies from <a class=\"reference\" href=\"https://codespeak.net/pypy/dist/pypy/doc/getting-started.html#translating-using-the-cli-backend\">pypy-cli</a>,\nincluding <a class=\"reference\" href=\"https://en.wikipedia.org/wiki/Windows_Forms\">Windows Forms</a>\n</p>", "image": null, "date_modified": "2000-01-01T00:00:00+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2008/04/01/trying-to-get-pypy-to-run-on-python-30/", "url": "https://antocuni.eu/2008/04/01/trying-to-get-pypy-to-run-on-python-30/", "title": "Trying to get PyPy to run on Python 3.0", "content_html": "<p>!!! note \"\"\n    Originally published on the <a href=\"https://pypy.org/posts/2008/04/trying-to-get-pypy-to-run-on-python-30-5082015544752137606.html\">PyPy blog</a>.</p>\n<html><body><p>As you surely know, Python 3.0 is coming; recently, they released\nPython 3.0 alpha 3, and the final version is expected around\nSeptember.\n</p>", "image": null, "date_modified": "2000-01-01T00:00:00+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2008/05/28/progresses-on-the-cli-jit-backend-front/", "url": "https://antocuni.eu/2008/05/28/progresses-on-the-cli-jit-backend-front/", "title": "Progresses on the CLI JIT backend front", "content_html": "<p>!!! note \"\"\n    Originally published on the <a href=\"https://pypy.org/posts/2008/05/progresses-on-cli-jit-backend-front-1021772190959551376.html\">PyPy blog</a>.</p>\n<html><body><p>In the last months, I've actively worked on the CLI backend for PyPy's\nJIT generator, whose goal is to automatically generate JIT compilers\nthat produces .NET bytecode on the fly.\n</p>", "image": null, "date_modified": "2000-01-01T00:00:00+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2008/06/16/next-sprint-vilniuspost-europython-10-12th-of-july/", "url": "https://antocuni.eu/2008/06/16/next-sprint-vilniuspost-europython-10-12th-of-july/", "title": "Next sprint: Vilnius/Post EuroPython, 10-12th of July", "content_html": "<p>!!! note \"\"\n    Originally published on the <a href=\"https://pypy.org/posts/2008/06/next-sprint-vilniuspost-europython-10-3844544842675903586.html\">PyPy blog</a>.</p>\n<html><body><p>As happened in the last years, there will be a PyPy sprint just after\n<a class=\"reference\" href=\"https://www.europython.org/\">EuroPython</a>.  The sprint will take place in the same hotel as the\nconference, from 10th to 12th of July.\n</p>", "image": null, "date_modified": "2000-01-01T00:00:00+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2008/06/22/pdb-and-rlcompleter_ng/", "url": "https://antocuni.eu/2008/06/22/pdb-and-rlcompleter_ng/", "title": "Pdb++ and rlcompleter_ng", "content_html": "<p>!!! note \"\"\n    Originally published on the <a href=\"https://pypy.org/posts/2008/06/pdb-and-rlcompleterng-2414105295687348881.html\">PyPy blog</a>.</p>\n<html><body><p>When hacking on PyPy, I spend a lot of time inside pdb; thus, I tried\nto create a more comfortable environment where I can pass my nights\n:-).\n</p>", "image": null, "date_modified": "2000-01-01T00:00:00+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2008/06/27/pypy-code-swarm/", "url": "https://antocuni.eu/2008/06/27/pypy-code-swarm/", "title": "PyPy code swarm", "content_html": "<p>!!! note \"\"\n    Originally published on the <a href=\"https://pypy.org/posts/2008/06/pypy-code-swarm-7038411918926116477.html\">PyPy blog</a>.</p>\n<html><body><p>Following the great success of <a class=\"reference\" href=\"https://vis.cs.ucdavis.edu/~ogawa/codeswarm/\">code_swarm</a>, I recently produced a\nvideo that shows the commit history of the PyPy project.\n</p>", "image": null, "date_modified": "2000-01-01T00:00:00+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2008/11/04/porting-the-jit-to-cli-part-1/", "url": "https://antocuni.eu/2008/11/04/porting-the-jit-to-cli-part-1/", "title": "Porting the JIT to CLI (part 1)", "content_html": "<p>!!! note \"\"\n    Originally published on the <a href=\"https://pypy.org/posts/2008/11/porting-jit-to-cli-part-1-8712941279840156635.html\">PyPy blog</a>.</p>\n<html><body><p>As the readers of this blog <a class=\"reference\" href=\"/posts/2008/05/progresses-on-cli-jit-backend-front-1021772190959551376.html\">already know</a>, I have been working on the CLI\nJIT backend for some months: last Friday, it reached an important milestone,\nas it is now able to produce huge speedups for a little dynamic language.  To\nknow how huge the speedup is, read on :-).\n</p>", "image": null, "date_modified": "2000-01-01T00:00:00+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2008/11/07/porting-the-jit-to-cli-part-2/", "url": "https://antocuni.eu/2008/11/07/porting-the-jit-to-cli-part-2/", "title": "Porting the JIT to CLI (part 2)", "content_html": "<p>!!! note \"\"\n    Originally published on the <a href=\"https://pypy.org/posts/2008/11/porting-jit-to-cli-part-2-2456826431882963884.html\">PyPy blog</a>.</p>\n<html><body><p>In my <a class=\"reference\" href=\"/posts/2008/11/porting-jit-to-cli-part-1-8712941279840156635.html\">previous post</a>, we saw that PyPy JIT generator can produce huge\nspeedups when applied to the <a class=\"reference\" href=\"https://www.blogger.com/.._%60sourcecode%60:https://codespeak.net/svn/pypy/branch/oo-jit/pypy/jit/tl/tlc.py\">tlc</a> toy language.\n</p>", "image": null, "date_modified": "2000-01-01T00:00:00+00:00", "authors": [], "tags": null}, {"id": "https://antocuni.eu/2008/12/07/porting-the-jit-to-cli-part-3/", "url": "https://antocuni.eu/2008/12/07/porting-the-jit-to-cli-part-3/", "title": "Porting the JIT to CLI (part 3)", "content_html": "<p>!!! note \"\"\n    Originally published on the <a href=\"https://pypy.org/posts/2008/12/porting-jit-to-cli-part-3-3519327524638923621.html\">PyPy blog</a>.</p>\n<html><body><p>In my two <a class=\"reference\" href=\"/posts/2008/11/porting-jit-to-cli-part-1-8712941279840156635.html\">previous</a> <a class=\"reference\" href=\"/posts/2008/11/porting-jit-to-cli-part-2-2456826431882963884.html\">posts</a>, we talked about the PyPy JIT generator, seeing\nthat it can produce huge speedups and how its backend-independent frontend\nworks.\n</p>", "image": null, "date_modified": "2000-01-01T00:00:00+00:00", "authors": [], "tags": null}]}