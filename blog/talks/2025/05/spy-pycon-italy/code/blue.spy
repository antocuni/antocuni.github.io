# XXX: we need to implement fabs because out builtin::abs supports only i32
def fabs(x: f64) -> f64:
    if x < 0:
        return -1 * x
    else:
        return x

@blue
def pi():
    """
    Compute an approximation of PI using the Leibniz series
    """
    tol = 0.001
    pi_approx = 0.0
    k = 0
    term = 1.0  # Initial term to enter the loop

    while fabs(term) > tol:
        if k % 2 == 0:
            term = 1.0 / (2 * k + 1)
        else:
            term = -1 * 1.0 / (2 * k + 1)

        pi_approx = pi_approx + term
        k = k + 1

    return 4 * pi_approx


def circumference(r: float) -> float:
    return 2 * pi() * r

def main() -> void:
    p = pi()
    print(p)
    print(circumference(10))
