<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>Antonio Cuni&#39;s blog</title><description>Antonio Cuni&#39;s blog</description><link>https://antocuni.eu/</link><atom:link href="https://antocuni.eu/feed_rss_created.xml" rel="self" type="application/rss+xml" /><language>en</language> <pubDate>Wed, 29 Oct 2025 16:14:23 -0000</pubDate> <lastBuildDate>Wed, 29 Oct 2025 16:14:23 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.17.1</generator> <image> <url>https://antocuni.eu/assets/logo.svg</url> <title>Antonio Cuni's blog</title><link>https://antocuni.eu/</link> </image> <item> <title>Inside SPy, part 1: Motivations and Goals</title> <description>&lt;h1&gt;Inside SPy🥸, part 1: Motivations and Goals&lt;/h1&gt;&lt;p&gt;This is the first of a series of posts in which I will try to give a deep explanation of&lt;a href=&#34;https://github.com/spylang/spy&#34;&gt;SPy&lt;/a&gt;, including motivations, goals, rules of thelanguage, differences with Python and implementation details.&lt;/p&gt;&lt;p&gt;This post focuses primarily on &lt;strong&gt;the problem space&lt;/strong&gt;: why Python is fundamentally hardto optimize, what trade-offs existing solutions require, and where current approachesfall short. Subsequent posts in this series will explore the solutions in depth. Fornow, let&#39;s start with the essential question: what is SPy?&lt;/p&gt;&lt;p&gt;!!! Success &#34;&#34; Before diving in, I want to express my gratitude to my employer, &lt;a href=&#34;https://www.anaconda.com/&#34;&gt;Anaconda&lt;/a&gt;, for giving me the opportunity to dedicate 100% of my time to this open-source project.&lt;/p&gt;</description><link>https://antocuni.eu/2025/10/29/inside-spy-part-1-motivations-and-goals/</link> <pubDate>Tue, 28 Oct 2025 13:06:54 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2025/10/29/inside-spy-part-1-motivations-and-goals/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2025/10/29/inside-spy-part-1-motivations-and-goals/</guid> </item> <item> <title>Tracing JITs in the real world @ CPython Core Dev Sprint</title> <description>&lt;h1&gt;Tracing JITs in the real world @ CPython Core Dev Sprint&lt;/h1&gt;&lt;p&gt;&lt;meta property=&#34;og:title&#34; content=&#34;Tracing JITs in the real world @ CPython Core Dev Sprint&#34;&gt;&lt;meta property=&#34;og:description&#34; content=&#34;My experience at the CPython Core Dev Sprint&#34;&gt;&lt;meta property=&#34;og:image&#34; content=&#34;http://antocuni.eu/2025/09-tracing-jit-real-world-python/cpython-core-dev-sprint-2025-cambridge.jpg&#34;&gt;&lt;meta name=&#34;author&#34; content=&#34;Antonio Cuni&#34;&gt;&lt;/p&gt;&lt;style&gt;.slide { border: 2px solid #ddd; border-radius: 8px; margin: 2em 0; background: #f9f9f9; max-width: 100%; width: 100%; box-sizing: border-box; padding: 2em; background: white; border-radius: 6px 6px 0 0; border-bottom: 2px solid #eee; display: block; min-height: 400px; height: auto; overflow-y: auto; overflow-x: hidden;}.slide h1, .slide h2, .slide h3 { margin-top: 0; color: #333;}&lt;/style&gt;&lt;p&gt;Last week I got to take part in the CPython Core Developer Sprint inCambridge, hosted by ARM and brilliantly&lt;a href=&#34;https://www.linkedin.com/posts/diegor_yesterday-we-wrapped-up-thecpython-core-activity-7375230888177057792-GezI&#34;&gt;organized by Diego Russo&lt;/a&gt;-- about ~50 core devs and guests were there, and I was excited to join as oneof the guests.&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;CPython Core Dev Sprint 2025, ARM, Cambridge&#34; src=&#34;cpython-core-dev-sprint-2025-cambridge.jpg&#34;&gt;&lt;/p&gt;&lt;p&gt;I had three main areas of focus:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;C API&lt;/strong&gt;: this was a follow up of what we discussed at the &lt;a href=&#34;../07-europython-talks/index.md&#34;&gt;C API summit at EuroPython&lt;/a&gt;. The current C API is problematic, so we are exploring ideas for the development of &lt;a href=&#34;https://github.com/py-ni&#34;&gt;PyNI&lt;/a&gt; (Python Native Interface), whose design will likely be heavily inspired by &lt;a href=&#34;https://hpyproject.org/&#34;&gt;HPy&lt;/a&gt;. It&#39;s important to underline that this is just the beginning and the entire process will require multiple PEPs.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;fancycompleter&lt;/strong&gt; This is a &lt;a href=&#34;https://github.com/python/cpython/pull/130473&#34;&gt;small PR&lt;/a&gt; which I started &lt;a href=&#34;../02-over-the-clouds/over-the-clouds.md&#34;&gt;months ago&lt;/a&gt;, to enable colorful tab completions within the Python REPL. I wrote the original version of &lt;a href=&#34;https://github.com/pdbpp/fancycompleter&#34;&gt;fancycompleter&lt;/a&gt; 15 years ago, but colorful completions work only in combination with PyREPL. Now PyREPL is part of the standard library and enabled by default, so we can finally upstream it. I hope to see it merged soon.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&#34;&lt;strong&gt;JIT stuff&lt;/strong&gt;&#34;: I spent a considerable amount of time talking to the people who are working on the CPython JIT (in particular Mark, Brandt, Savannah, Ken Jin and Diego). Knowledge transfer worked in both ways: I learned a lot about the internal details of CPython&#39;s JIT, and conversely I shared with them some of the experience, pain points and gut feelings which I got by working many years on PyPy.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In particular, on the first day I presented a talk titled &lt;strong&gt;Tracing JIT and real world Python&lt;/strong&gt; (&lt;a href=&#34;../../../talk/2025/09/core-dev-sprint-pypy-jit/index.html&#34;&gt;slides&lt;/a&gt; and &lt;a href=&#34;https://github.com/antocuni/antocuni.github.io/tree/main/blog/talk/2025/09/core-dev-sprint-pypy-jit&#34;&gt;source code&lt;/a&gt;).&lt;/p&gt;&lt;p&gt;What follows is an annotated version of the slides.&lt;/p&gt;</description><link>https://antocuni.eu/2025/09/24/tracing-jits-in-the-real-world--cpython-core-dev-sprint/</link> <pubDate>Mon, 22 Sep 2025 22:06:16 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2025/09/24/tracing-jits-in-the-real-world--cpython-core-dev-sprint/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2025/09/24/tracing-jits-in-the-real-world--cpython-core-dev-sprint/</guid> </item> <item> <title>Inside CPython&#39;s attribute lookup</title> <description>&lt;h1&gt;Inside CPython&#39;s attribute lookup&lt;/h1&gt;&lt;p&gt;Python&#39;s attribute lookup logic seems pretty simple at a first glance: &#34;firstlook in the instance &lt;code&gt;__dict__&lt;/code&gt;, then look in its type&#34;.&lt;/p&gt;&lt;p&gt;However, the actual logic is much more complex because it needs to take intoaccount the descriptor protocol, the difference between lookups on instancesvs types, and what happens in presence of metaclasses.&lt;/p&gt;&lt;p&gt;Recently I implemented preliminary support for the descriptor protocol in SPy,which led me to investigate the CPython source code to get abetter grasp on the details. This is a write up on what I found, with links tothe actual C source code, to serve as a future reference.&lt;/p&gt;&lt;p&gt;Thanks to Hood Chatham, Siu Kwan Lam and Justin Wood for the feedback on drafts.&lt;/p&gt;</description><link>https://antocuni.eu/2025/08/25/inside-cpythons-attribute-lookup/</link> <pubDate>Fri, 22 Aug 2025 19:47:54 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2025/08/25/inside-cpythons-attribute-lookup/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2025/08/25/inside-cpythons-attribute-lookup/</guid> </item> <item> <title>Slides for my EuroPython 2025 talks</title> <description>&lt;h1&gt;EuroPython 2025 slides&lt;/h1&gt;&lt;p&gt;Here are the slides for the three speeches which I gave at&lt;a href=&#34;https://ep2025.europython.eu/&#34;&gt;EuroPython 2025&lt;/a&gt;:&lt;/p&gt;</description><link>https://antocuni.eu/2025/07/21/slides-for-my-europython-2025-talks/</link> <pubDate>Mon, 21 Jul 2025 18:22:23 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2025/07/21/slides-for-my-europython-2025-talks/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2025/07/21/slides-for-my-europython-2025-talks/</guid> </item> <item> <title>Claude code modified my .bashrc without asking?</title> <description>&lt;h1&gt;Claude code modified my .bashrc without asking?&lt;/h1&gt;&lt;p&gt;!!! note &#34;Note&#34; This is not the classical post about running &lt;code&gt;claude&lt;/code&gt; in YOLO mode and then complaining that it damaged the system. I have reasons to think that &lt;code&gt;claude&lt;/code&gt; automatically modified my &lt;code&gt;.bashrc&lt;/code&gt; to remove a line &lt;code&gt;alias claude=...&lt;/code&gt; without asking my permission and without notifying me of the change.&lt;/p&gt;</description><link>https://antocuni.eu/2025/07/07/claude-code-modified-my-bashrc-without-asking/</link> <pubDate>Tue, 08 Jul 2025 00:11:03 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2025/07/07/claude-code-modified-my-bashrc-without-asking/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2025/07/07/claude-code-modified-my-bashrc-without-asking/</guid> </item> <item> <title>SPy @ PyCon IT 2025</title> <description>&lt;h1&gt;SPy @ PyCon IT 2025&lt;/h1&gt;&lt;p&gt;&lt;meta property=&#34;og:title&#34; content=&#34;SPy @ PyCon IT 2025&#34;&gt;&lt;meta property=&#34;og:description&#34; content=&#34;Slides of the talk&#34;&gt;&lt;meta property=&#34;og:image&#34; content=&#34;http://antocuni.eu/2025/05-spy-pycon-italy/selfie.jpg&#34;&gt;&lt;meta name=&#34;author&#34; content=&#34;Antonio Cuni&#34;&gt;&lt;/p&gt;&lt;p&gt;Yesterday I talked about &lt;a href=&#34;https://github.com/spylang/spy&#34;&gt;SPy&lt;/a&gt; at &lt;a href=&#34;https://pycon.it/&#34;&gt;PyCon Italy&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;The most complicated selfie ever&#34; src=&#34;selfie.jpg&#34;&gt;&lt;/p&gt;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/hugovk&#34;&gt;Hugo van Kemenade&lt;/a&gt; for the picture.&lt;/p&gt;&lt;p&gt;Slides are available &lt;a href=&#34;../../../talk/2025/05/spy-pycon-italy/index.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The edited video is not available yet, but in the meantime it&#39;s possible towatch unedited version available inside the&lt;a href=&#34;https://www.youtube.com/live/pAnun46-fwE?si=gSMnf26TNHNSJkkO&amp;amp;t=20642&#34;&gt;live stream&lt;/a&gt;at minute 05:44:05.&lt;/p&gt;</description><link>https://antocuni.eu/2025/05/31/spy--pycon-it-2025/</link> <pubDate>Sat, 31 May 2025 19:39:02 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2025/05/31/spy--pycon-it-2025/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2025/05/31/spy--pycon-it-2025/</guid> </item> <item> <title>Tales with claude code: how to make it behave?</title> <description>&lt;h1&gt;Tales with claude code: how to make it behave?&lt;/h1&gt;&lt;p&gt;In the past weeks, I have been experimenting with using &lt;code&gt;claude code&lt;/code&gt; to speedup development, in particular of &lt;a href=&#34;https://github.com/spylang/spy&#34;&gt;SPy&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;My experience so far reveals a clear pattern: &lt;code&gt;claude&lt;/code&gt; excels at simple,one-shot tasks that follow existing patterns, producing commit-readycode. However, for complex tasks requiring multiple iterations, qualitydeteriorates significantly with each round, often necessitating completerewrites or extensive cleanup.&lt;/p&gt;&lt;p&gt;Because of this, I have been looking for ways to guide it towards making itonly simple steps, and to wait for my confirmation before going further. Sofar, I failed.&lt;/p&gt;</description><link>https://antocuni.eu/2025/03/16/tales-with-claude-code-how-to-make-it-behave/</link> <pubDate>Tue, 27 May 2025 15:56:43 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2025/03/16/tales-with-claude-code-how-to-make-it-behave/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2025/03/16/tales-with-claude-code-how-to-make-it-behave/</guid> </item> <item> <title>Over the clouds: CPython, Pyodide and SPy</title> <description>&lt;h1&gt;Over the clouds: CPython, Pyodide and SPy&lt;/h1&gt;&lt;p&gt;&lt;meta property=&#34;og:title&#34; content=&#34;Over the Clouds: CPython, Pyodide, and SPy&#34;&gt;&lt;meta property=&#34;og:description&#34; content=&#34;A week of hacking and winter sports in Cervinia&#34;&gt;&lt;meta property=&#34;og:image&#34; content=&#34;http://antocuni.eu/2025/02-over-the-clouds/valtournenche-over-the-clouds.jpg&#34;&gt;&lt;meta name=&#34;author&#34; content=&#34;Antonio Cuni&#34;&gt;&lt;/p&gt;&lt;p&gt;The Python community is awesome.&lt;/p&gt;&lt;p&gt;It is full of great people and minds, and interacting with people atconferences is always nice and stimulating. But one of my favorite things isthat over time, after many conferences, talks, pull requests and beers, thepersonal relationship with some of them strengthen and they become friends.&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;View from a ski slope in Valtournenche, Italy&#34; src=&#34;valtournenche-over-the-clouds.jpg&#34;&gt;&lt;/p&gt;&lt;p&gt;I am fortunate enough that two of them, Łukasz Langa and Hood Chatham, accepted myinvitation to join me in Cervinia, at the border between Italian and Swiss Alps,for a week of hacking, winter sports and going literally over the clouds. Thisis a brief summary of what we did during our time together.&lt;/p&gt;</description><link>https://antocuni.eu/2025/02/26/over-the-clouds-cpython-pyodide-and-spy/</link> <pubDate>Wed, 26 Feb 2025 18:48:29 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2025/02/26/over-the-clouds-cpython-pyodide-and-spy/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2025/02/26/over-the-clouds-cpython-pyodide-and-spy/</guid> </item> <item> <title>Hello, HPy</title> <description>&lt;p&gt;!!! note &#34;&#34; Originally published on the &lt;a href=&#34;https://hpyproject.org/blog/posts/2021/03/hello-hpy/&#34;&gt;HPy blog&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;HPy has been around for a while now. The initial discussion started duringEuroPython 2019, in the good old times when we could still go to conferencesand have real-life meetings. Since then, HPy progressed &lt;strong&gt;a lot&lt;/strong&gt; from thepoint of view of the actual code, but we have been a bit too silentw.r.t. communicating what we are doing to the external world and to the broaderPython community. Hopefully, now that this blog is online we will do a betterjob at periodically communicating the status of HPy, so make sure tosubscribe to the RSS feed.&lt;/p&gt;</description><link>https://antocuni.eu/2021/03/29/hello-hpy/</link> <pubDate>Tue, 11 Feb 2025 13:49:52 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2021/03/29/hello-hpy/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2021/03/29/hello-hpy/</guid> </item> <item> <title>hpy 0.0.2: First public release</title> <description>&lt;p&gt;!!! note &#34;&#34; Originally published on the &lt;a href=&#34;https://hpyproject.org/blog/posts/2021/07/hpy-0.0.2-first-public-release/&#34;&gt;HPy blog&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;HPy 0.0.2 is out! This is the first version which is officially released andmade available on PyPI.&lt;/p&gt;&lt;p&gt;The major highlight of this release is that it is supported by three differentPython implementations: CPython, PyPy and GraalPython.&lt;/p&gt;</description><link>https://antocuni.eu/2021/07/15/hpy-002-first-public-release/</link> <pubDate>Tue, 11 Feb 2025 13:49:52 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2021/07/15/hpy-002-first-public-release/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2021/07/15/hpy-002-first-public-release/</guid> </item> <item> <title>HPy @ Python Language Summit</title> <description>&lt;p&gt;!!! note &#34;&#34; Originally published on the &lt;a href=&#34;https://hpyproject.org/blog/posts/2021/05/hpy-python-language-summit/&#34;&gt;HPy blog&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Yesterday I had the privilege to give a talk about HPy(&lt;a href=&#34;https://hpyproject.org/talks/2021/05/hpy-present-and-future.pdf&#34;&gt;sildes&lt;/a&gt;) at the&lt;a href=&#34;https://us.pycon.org/2021/summits/language/&#34;&gt;Python Language Summit 2021&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The organizers of the summit will soon publish a full report about the event(edit: now available&lt;a href=&#34;https://pyfound.blogspot.com/2021/05/the-2021-python-language-summit.html&#34;&gt;here&lt;/a&gt;),but &lt;a href=&#34;https://pyfound.blogspot.com/2021/05/the-2021-python-language-summit-hpy.html&#34;&gt;for the HPy-specificpart&lt;/a&gt;,we got generally good feedback. Someone has a few concerns that if CPython isto change the API, HPy might not be going far enough. Others said that Pythonshouldn&#39;t wait for the &#34;perfect&#34; API if HPy can be the &#34;good&#34; one that helps itevolve.&lt;/p&gt;&lt;p&gt;Everyone was open to have HPy-compatible wheels on PyPI, once the HPyUniversal ABI stays relatively stable. Many people suggested that we shouldreally write a PEP to propose HPy as a &#34;semi-official&#34; API for Python.&lt;/p&gt;</description><link>https://antocuni.eu/2021/05/12/hpy--python-language-summit/</link> <pubDate>Tue, 11 Feb 2025 13:49:52 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2021/05/12/hpy--python-language-summit/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2021/05/12/hpy--python-language-summit/</guid> </item> <item> <title>Improve .NET Integration</title> <description>&lt;p&gt;!!! note &#34;&#34; Originally published on the &lt;a href=&#34;https://pypy.org/posts/2008/01/improve-net-integration-2239651503641931440.html&#34;&gt;PyPy blog&lt;/a&gt;.&lt;/p&gt;&lt;html&gt;&lt;body&gt;&lt;p&gt;A while ago Amit Regmi, a student from Canada, started working on the&lt;a class=&#34;reference&#34; href=&#34;https://codespeak.net/viewvc/pypy/branch/clr-module-improvements/?pathrev=50773&#34;&gt;clr module improvements&lt;/a&gt; branch as a university project.&lt;/p&gt;</description><link>https://antocuni.eu/2008/01/19/improve-net-integration/</link> <pubDate>Mon, 10 Feb 2025 19:12:06 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2008/01/19/improve-net-integration/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2008/01/19/improve-net-integration/</guid> </item> <item> <title>PyPy.NET goes Windows Forms</title> <description>&lt;p&gt;!!! note &#34;&#34; Originally published on the &lt;a href=&#34;https://pypy.org/posts/2008/01/pypynet-goes-windows-forms-7031406830502864570.html&#34;&gt;PyPy blog&lt;/a&gt;.&lt;/p&gt;&lt;html&gt;&lt;body&gt;&lt;a href=&#34;https://4.bp.blogspot.com/_4gR6Ggu8oHQ/R5J41OiHR7I/AAAAAAAAACo/u8jr08QiCmo/s1600-h/winform.png&#34;&gt;&lt;img alt=&#34;&#34; border=&#34;0&#34; id=&#34;BLOGGER_PHOTO_ID_5157317379122218930&#34; src=&#34;https://4.bp.blogspot.com/_4gR6Ggu8oHQ/R5J41OiHR7I/AAAAAAAAACo/u8jr08QiCmo/s320/winform.png&#34; style=&#34;float: right; margin: 0 0 10px 10px; cursor: pointer; cursor: hand;&#34;&gt;&lt;/a&gt;&lt;p&gt;After having spent the last few days on understanding PyPy&#39;s JIT,today I went back hacking the &lt;cite&gt;clr module&lt;/cite&gt;. As a result, it is nowpossible to import and use external assemblies from &lt;a class=&#34;reference&#34; href=&#34;https://codespeak.net/pypy/dist/pypy/doc/getting-started.html#translating-using-the-cli-backend&#34;&gt;pypy-cli&lt;/a&gt;,including &lt;a class=&#34;reference&#34; href=&#34;https://en.wikipedia.org/wiki/Windows_Forms&#34;&gt;Windows Forms&lt;/a&gt;&lt;/p&gt;</description><link>https://antocuni.eu/2008/01/19/pypynet-goes-windows-forms/</link> <pubDate>Mon, 10 Feb 2025 19:12:06 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2008/01/19/pypynet-goes-windows-forms/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2008/01/19/pypynet-goes-windows-forms/</guid> </item> <item> <title>Trying to get PyPy to run on Python 3.0</title> <description>&lt;p&gt;!!! note &#34;&#34; Originally published on the &lt;a href=&#34;https://pypy.org/posts/2008/04/trying-to-get-pypy-to-run-on-python-30-5082015544752137606.html&#34;&gt;PyPy blog&lt;/a&gt;.&lt;/p&gt;&lt;html&gt;&lt;body&gt;&lt;p&gt;As you surely know, Python 3.0 is coming; recently, they releasedPython 3.0 alpha 3, and the final version is expected aroundSeptember.&lt;/p&gt;</description><link>https://antocuni.eu/2008/04/01/trying-to-get-pypy-to-run-on-python-30/</link> <pubDate>Mon, 10 Feb 2025 19:12:06 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2008/04/01/trying-to-get-pypy-to-run-on-python-30/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2008/04/01/trying-to-get-pypy-to-run-on-python-30/</guid> </item> <item> <title>Progresses on the CLI JIT backend front</title> <description>&lt;p&gt;!!! note &#34;&#34; Originally published on the &lt;a href=&#34;https://pypy.org/posts/2008/05/progresses-on-cli-jit-backend-front-1021772190959551376.html&#34;&gt;PyPy blog&lt;/a&gt;.&lt;/p&gt;&lt;html&gt;&lt;body&gt;&lt;p&gt;In the last months, I&#39;ve actively worked on the CLI backend for PyPy&#39;sJIT generator, whose goal is to automatically generate JIT compilersthat produces .NET bytecode on the fly.&lt;/p&gt;</description><link>https://antocuni.eu/2008/05/28/progresses-on-the-cli-jit-backend-front/</link> <pubDate>Mon, 10 Feb 2025 19:12:06 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2008/05/28/progresses-on-the-cli-jit-backend-front/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2008/05/28/progresses-on-the-cli-jit-backend-front/</guid> </item> <item> <title>Next sprint: Vilnius/Post EuroPython, 10-12th of July</title> <description>&lt;p&gt;!!! note &#34;&#34; Originally published on the &lt;a href=&#34;https://pypy.org/posts/2008/06/next-sprint-vilniuspost-europython-10-3844544842675903586.html&#34;&gt;PyPy blog&lt;/a&gt;.&lt;/p&gt;&lt;html&gt;&lt;body&gt;&lt;p&gt;As happened in the last years, there will be a PyPy sprint just after&lt;a class=&#34;reference&#34; href=&#34;https://www.europython.org/&#34;&gt;EuroPython&lt;/a&gt;. The sprint will take place in the same hotel as theconference, from 10th to 12th of July.&lt;/p&gt;</description><link>https://antocuni.eu/2008/06/16/next-sprint-vilniuspost-europython-10-12th-of-july/</link> <pubDate>Mon, 10 Feb 2025 19:12:06 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2008/06/16/next-sprint-vilniuspost-europython-10-12th-of-july/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2008/06/16/next-sprint-vilniuspost-europython-10-12th-of-july/</guid> </item> <item> <title>Pdb++ and rlcompleter_ng</title> <description>&lt;p&gt;!!! note &#34;&#34; Originally published on the &lt;a href=&#34;https://pypy.org/posts/2008/06/pdb-and-rlcompleterng-2414105295687348881.html&#34;&gt;PyPy blog&lt;/a&gt;.&lt;/p&gt;&lt;html&gt;&lt;body&gt;&lt;p&gt;When hacking on PyPy, I spend a lot of time inside pdb; thus, I triedto create a more comfortable environment where I can pass my nights:-).&lt;/p&gt;</description><link>https://antocuni.eu/2008/06/22/pdb-and-rlcompleter_ng/</link> <pubDate>Mon, 10 Feb 2025 19:12:06 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2008/06/22/pdb-and-rlcompleter_ng/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2008/06/22/pdb-and-rlcompleter_ng/</guid> </item> <item> <title>PyPy code swarm</title> <description>&lt;p&gt;!!! note &#34;&#34; Originally published on the &lt;a href=&#34;https://pypy.org/posts/2008/06/pypy-code-swarm-7038411918926116477.html&#34;&gt;PyPy blog&lt;/a&gt;.&lt;/p&gt;&lt;html&gt;&lt;body&gt;&lt;p&gt;Following the great success of &lt;a class=&#34;reference&#34; href=&#34;https://vis.cs.ucdavis.edu/~ogawa/codeswarm/&#34;&gt;code_swarm&lt;/a&gt;, I recently produced avideo that shows the commit history of the PyPy project.&lt;/p&gt;</description><link>https://antocuni.eu/2008/06/27/pypy-code-swarm/</link> <pubDate>Mon, 10 Feb 2025 19:12:06 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2008/06/27/pypy-code-swarm/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2008/06/27/pypy-code-swarm/</guid> </item> <item> <title>Porting the JIT to CLI (part 1)</title> <description>&lt;p&gt;!!! note &#34;&#34; Originally published on the &lt;a href=&#34;https://pypy.org/posts/2008/11/porting-jit-to-cli-part-1-8712941279840156635.html&#34;&gt;PyPy blog&lt;/a&gt;.&lt;/p&gt;&lt;html&gt;&lt;body&gt;&lt;p&gt;As the readers of this blog &lt;a class=&#34;reference&#34; href=&#34;/posts/2008/05/progresses-on-cli-jit-backend-front-1021772190959551376.html&#34;&gt;already know&lt;/a&gt;, I have been working on the CLIJIT backend for some months: last Friday, it reached an important milestone,as it is now able to produce huge speedups for a little dynamic language. Toknow how huge the speedup is, read on :-).&lt;/p&gt;</description><link>https://antocuni.eu/2008/11/04/porting-the-jit-to-cli-part-1/</link> <pubDate>Mon, 10 Feb 2025 19:12:06 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2008/11/04/porting-the-jit-to-cli-part-1/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2008/11/04/porting-the-jit-to-cli-part-1/</guid> </item> <item> <title>Porting the JIT to CLI (part 2)</title> <description>&lt;p&gt;!!! note &#34;&#34; Originally published on the &lt;a href=&#34;https://pypy.org/posts/2008/11/porting-jit-to-cli-part-2-2456826431882963884.html&#34;&gt;PyPy blog&lt;/a&gt;.&lt;/p&gt;&lt;html&gt;&lt;body&gt;&lt;p&gt;In my &lt;a class=&#34;reference&#34; href=&#34;/posts/2008/11/porting-jit-to-cli-part-1-8712941279840156635.html&#34;&gt;previous post&lt;/a&gt;, we saw that PyPy JIT generator can produce hugespeedups when applied to the &lt;a class=&#34;reference&#34; href=&#34;https://www.blogger.com/.._%60sourcecode%60:https://codespeak.net/svn/pypy/branch/oo-jit/pypy/jit/tl/tlc.py&#34;&gt;tlc&lt;/a&gt; toy language.&lt;/p&gt;</description><link>https://antocuni.eu/2008/11/07/porting-the-jit-to-cli-part-2/</link> <pubDate>Mon, 10 Feb 2025 19:12:06 +0000</pubDate><source url="https://antocuni.eu/feed_rss_created.xml">Antonio Cuni's blog</source><comments>https://antocuni.eu/2008/11/07/porting-the-jit-to-cli-part-2/#__comments</comments><guid isPermaLink="true">https://antocuni.eu/2008/11/07/porting-the-jit-to-cli-part-2/</guid> </item> </channel></rss>